export const data = [
	{
		id: 1,
		title: "Multiples of 3 and 5",
		prompt: [
			"If we list all the natural numbers below 10 that are multiples of 3 or 5, we get 3, 5, 6 and 9. The sum of these multiples is 23.",
			"Find the sum of all the multiples of 3 or 5 below 1000."
		],
		solution: {
			value: "266333",
			explaination: [
				"Use for loops to generate an array of all the multiples of 3 and 5 below 1000. Then use the reduce method to sum all values in the array."
			],
			code: `const solve = (a, b) => {

	let multiples = []

	for (let i = 1; i * a < 1000; i++) {
		multiples.push(i * a)
	}

	for (let i = 1; i * b < 1000; i++) {
		multiples.push(i * b)
	}

	const sum = multiples.reduce((acc, cur) => acc + cur, 0)

	return sum

	}

solve(3, 5)`,
			codepen: "https://codepen.io/clockworkftw-the-sasster/pen/gOboYQN"
		}
	},
	{
		id: 2,
		title: "Even Fibonacci numbers",
		prompt: [
			"Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:",
			"1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...",
			"By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms."
		],
		solution: {
			value: "4613732",
			explaination: [
				"Create an array containing the numbers 1 and 2. Use a for loop to push the remaining Fibonacci numbers less than 4,000,000 onto the array. We use the expression arr[i] + arr[i + 1] to find the next number in the sequence",
				"Next filter the array for only even numbers using the remainder opperator.",
				"Finally, use the reduce method to sum all the values in the array."
			],
			code: `const solve = fib => {

	for (let i = 0; fib[i] + fib[i + 1] < 4000000; i++) {
		fib.push(fib[i] + fib[i + 1])
	}

	fib = fib.filter(e => e % 2 === 0)

	const sum = fib.reduce((acc, cur) => acc + cur, 0)

	return sum

}

solve([1, 2])`,
			codepen: "https://codepen.io/clockworkftw-the-sasster/pen/NWPXRxy"
		}
	},
	{
		id: 3,
		title: "Largest prime factor",
		prompt: [
			"The prime factors of 13195 are 5, 7, 13 and 29.",
			"What is the largest prime factor of the number 600851475143 ?"
		],
		solution: {
			value: "6857",
			explaination: [],
			code: `const isPrime = val => {
	for (let i = 2; i < val - 1; i ++) {
		if (val % i === 0) {
			return false
		}
	}
	return true
}

const solve = val => {
	for (let i = val - 1; i > 0; i --) {
		if (val % i === 0) {
			if (isPrime(i)) {
				return i
			}
		}
	}
}

solve(3795754)`,
			codepen: "https://codepen.io/clockworkftw-the-sasster/pen/NWPXJXb"
		}
	},
	{
		id: 4,
		title: "Largest palindrome product",
		prompt: [
			"A palindromic number reads the same both ways. The largest palindrome made from the product of two 2-digit numbers is 9009 = 91 Ã— 99.",
			"Find the largest palindrome made from the product of two 3-digit numbers."
		],
		solution: {
			value: "906609",
			explaination: [],
			code: `const reverse = val => parseInt(val.toString().split("").reverse().join(""))

const max = arr => arr.reduce((a, b) => Math.max(a, b))

const solve = () => {
	
	let palindromes = []
	
	for (let i = 999; i > 99; i --) {
		for (let j = 999; j > 99; j --) {
			let product = i * j
			if (product === reverse(product)) {
				palindromes.push(product)
			}
		}
	}
	
	return max(palindromes)
	
}

solve()`,
			codepen: "https://codepen.io/clockworkftw-the-sasster/pen/povaYRE"
		}
	}
];
